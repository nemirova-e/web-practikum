version: "3.7"
services:
  app:
    build:
      args:
        user: insure-bro
        uid: 1000
      context: ./
      dockerfile: ./.docker/Dockerfile
    image: insure-bro
    container_name: insure-bro-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - insure-bro-network

  nginx:
    image: nginx:alpine
    container_name: insure-bro-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./.docker/nginx/:/etc/nginx/conf.d/
    networks:
      - insure-bro-network

  db:
    image: mariadb
    container_name: insure-bro-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: insure-bro
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - insure-bro-network
    ports:
      - 3306:3306

  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: insure-bro-elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - insure-bro-network


  rabbitmq:
    image: rabbitmq:3-management
    container_name: insure-bro-rabbitmq-admin
    restart: always
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - insure-bro-network


  redis:
    image: redis:6.2.6
    container_name: insure-bro-redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - insure-bro-network

  mailhog:
    image: mailhog/mailhog
    container_name: insure-bro-mailhog
    restart: always
    ports:
      - 8025:8025
    networks:
      - insure-bro-network


networks:
  insure-bro-network:
    driver: bridge

volumes:
  db-data:
  es-data:








